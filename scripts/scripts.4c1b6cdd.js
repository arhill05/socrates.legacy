"use strict";angular.module("angularfireApp",["ngAnimate","ngRoute","ngTouch","firebase","firebase.ref"]),angular.module("angularfireApp").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("firebase.config",[]).constant("FBURL","https://burning-heat-1866.firebaseio.com"),angular.module("firebase.ref",["firebase","firebase.config"]).factory("Ref",["$window","FBURL",function(a,b){return new a.Firebase(b)}]),angular.module("angularfireApp").controller("SessionsCtrl",["$scope","Ref","$firebaseArray","$timeout",function(a,b,c,d){function e(b){a.err=b,d(function(){a.err=null},5e3)}a.sessions=c(b.child("sessions").limitToLast(10)),a.sessions.$loaded()["catch"](e),a.addMessage=function(b){b&&a.messages.$add({text:b})["catch"](e)}}]),angular.module("angularfireApp").controller("CreateCtrl",["$scope","Ref","$firebaseArray","$timeout","$location",function(a,b,c,d,e){function f(b){a.err=b,d(function(){a.err=null},5e3)}a.sessions=c(b.child("sessions").limitToLast(10)),a.sessions.$loaded()["catch"](f),a.id="",a.addSession=function(){var c={id:a.id,questions:{}};b.child("sessions/"+c.id).set(c),e.path("/sessions/"+c.id)}}]),angular.module("angularfireApp").filter("reverse",function(){return function(a){return angular.isArray(a)?a.slice().reverse():[]}}),angular.module("angularfireApp").controller("QuestionsCtrl",["$scope","Ref","$firebaseArray","$timeout","$routeParams",function(a,b,c,d,e){function f(b){a.err=b,d(function(){a.err=null},5e3)}a.questions=c(b.child("sessions/"+e.sessionID+"/Questions")),a.questions.$loaded()["catch"](f),a.addQuestion=function(){var b={text:a.text,upvotes:0,disabled:!1};a.questions.$add(b),a.text=""},a.upvoteQuestion=function(b){var c=a.questions.$indexFor(b.$id);a.questions[c].disabled=!0,b.upvotes=b.upvotes+1,a.questions.$save(b),this.disabled=!0,$("#"+b.$id).css("pointer-events","none")}}]),angular.module("angularfireApp").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/sessions/:sessionID",{templateUrl:"views/questions.html",controller:"QuestionsCtrl"}).when("/sessions",{templateUrl:"views/sessions.html",controller:"SessionsCtrl"}).when("/create",{templateUrl:"views/create.html",controller:"CreateCtrl"}).otherwise({redirectTo:"/"})}]);